import os
from dotenv import load_dotenv
from pyqiwip2p import QiwiP2P

load_dotenv()
p2p = QiwiP2P(auth_key=os.getenv("QIWI_TOKEN"))


def get_status(bill):
    return p2p.check(bill).status


def create_bill(amount):
    return p2p.bill(amount=amount, lifetime=10, comment='')


def reject_bill(bill):
    p2p.reject(bill)


def get_cost(task):
    if task[3] == 'мк':
        if task[2] == 'Тервер и матстат':
            return 150
        return 75
    if task[2] == 'Аналитическая геометрия' and task[3] == 'дз 2.1':
        return 100
    if task[2] == 'Аналитическая геометрия' and task[3] == 'дз 2.2':
        return 75
    if task[2] == 'Аналитическая геометрия' and task[3] == 'кр':
        return 100
    if task[2] == 'Кратинты и ряды' and task[3] == 'дз 2ч1':
        if task[4] in ['Вычисление ротора поля']:
            return 35
        if task[4] in ['Восстановление функции по ее полному дифференциалу с помощью криволинейного интеграла 2-го рода',
                       'Вычисление потока векторного поля по формуле Гаусса-Остроградского',
                       'Независимость криволинейного интеграла 2-го рода от пути интегрирования']:
            return 75
        return 100
    if task[2] == 'Кратинты и ряды' and task[3] == 'дз 2ч2':
        if task[4] in ['Нахождение области сходимости степенного ряда',
                       'Приближенное вычисление определенного интеграла с заданной точностью при помощи степенного ряда']:
            return 75
        return 100
    if task[2] == 'Кратинты и ряды' and task[3] == 'рк1':
        if task[4] == 'теория':
            return 175
        return 75
    if task[2] == 'Кратинты и ряды' and task[3] == 'рк2':
        if task[4] in ['Вычисление ротора градиента скалярного поля',
                       'Вычисление ротора поля']:
            return 35
        if task[4] in ['Вычисление дивергенции векторного поля',
                       'Вычисление циркуляции векторного поля']:
            return 100
        if task[4] in ['Разложение функции в ряд по степеням с использованием известных формул разложений в ряд, определение области сходимости полученного ряда']:
            return 175
        if task[4] == 'теория':
            return 400
        return 150
    if task[2] == 'Тервер и матстат' and task[3] == 'см 1':
        return 75
    if task[2] == 'Тервер и матстат' and task[3] == 'см 2':
        if task[4] in ['Найти оценку параметров методом максимального правдоподобия']:
            return 150
        return 100

    if task[2] == 'Кратные и криволинейные интегралы, ряды' and task[3] == 'Экзамен':
        if task[4] in ['КИ. Вычисление объема тела, ограниченного цилиндрической поверхностью, с помощью двойного интеграл_',
                       'КИ. Вычисление площади части заданной поверхности с помощью двойного интеграла_',
                       'КИ. Вычисление криволинейного интеграла по формуле Грина_',
                       'КИ. Независимость криволинейного интеграла 2-го рода от пути интегрирования_',
                       'КИ. Вычисление объема тела, ограниченного заданными поверхностями, с помощью тройного интеграла_',
                       'КИ. Вычисление массы тела с заданной переменной плотностью с помощью тройного интеграла_',
                       'КИ. Вычисление массы поверхности с помощью поверхностного интеграла 1-го рода_',
                       'ТП. Вычисление циркуляции по формуле Стокса_'
                       'ТП. Вычисление потока векторного поля по формуле Гаусса-Остроградского_',
                       'ТП. Вычисление потока векторного поля через часть поверхности с помощью поверхностного интеграла второго рода_',
                       'КИ. Нахождение координат центра масс тела с заданной плотностью с помощью тройного интеграла_',
                       'КИ. Вычисление массы кривой с помощью криволинейного интеграла первого рода_',
                       'КИ. Вычисление момента инерции кривой с помощью криволинейного интеграла первого рода_',
                       'КИ. Вычисление работы при перемещении материальной точки вдоль кривой с помощью криволинейного интеграла второго рода_',
                       'КИ. Вычисление момента инерции поверхности с помощью поверхностного интеграла 1-го рода_',]:
            return 375
        if task[4] in ['Ряды. Разложение функции в ряд по степеням с использованием известных формул разложений в ряд, определение области сходимости полученного ряда_',]:
            return 350
        if task[4] in ['КРиР. Кратные интегралы. Теоремы_',
                       'КРиР. Криволинейные интегралы и теория поля. Теоремы_',
                       'КРиР. Ряды. Теоремы_',]:
            return 300
        if task[4] in ['КРиР. Криволинейные интегралы и теория поля. Теория_',
                       'КРиР. Ряды .Теория. (выбрать все правильные утверждения)',
                       'КРиР. Ряды. Теория. (выбрать все верные утверждения)',
                       'КРиР. Кратные интегралы. Теория_',]:
            return 250
        if task[4] in ['Ряды. Нахождение области сходимости степенного ряда_',]:
            return 200
        if task[4] in ['Ряды. Исследование сходимости числового ряда с выбором подходящего признака_',]:
            return 150
    if task[2] == 'Дифференциальная геометрия и основы тензорного исчисления' and task[3] == 'Экзамен':
        if task[4] in ['ДГ. Гауссова кривизна поверхности_',
                       'ДГ. Главные кривизны поверхности_',
                       'ДГ. Средняя кривизна поверхности_'
                       'ДГ. Угол между линиями на поверхности_',
                       'ДГ. Площадь области на поверхности_',]:
            return 450
        if task[4] in ['ДГ. Первая и вторая квадратичные формы поверхности_',
                       'ТИ. Дифференциальные характеристики цилиндрических координат_',
                       'ТИ. Нахождение векторного произведения тензора на вектор, заданных в декартовом ортонормированном базисе_',
                       'ТИ. Нахождение компонент скалярного произведения тензоров, заданных своими компонентами в ортонормированном базисе, в некотором другом базисе_',
                       'ТИ. Нахождение компонент скалярного произведения тензора на вектор, заданных своими компонентами в ортонормированном базисе, в некотором другом базисе_',]:
            return 350
        if task[4] in ['ДГ. РК №1. Теория_',
                       'Тензорный анализ. РК №1. Теория_',]:
            return 325
        if task[4] in ['ТИ. Нахождение полной свертки тензоров, заданных в ортонормированном базисе_',]:
            return 300

    return 120
